name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  AQUA_USER: ${{ secrets.AQUA_USER }} # Aqua Registry
  AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }} # Aqua Registry
  AQUA_TOKEN: ${{ secrets.AQUA_TOKEN }} # Aqua Scanner authentication
  AQUA_HOST: ${{ secrets.AQUA_HOST }} # Aqua Scanner authentication
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Docker Registry
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Docker Registry
  BUILD_NUMBER: ${{ github.run_id }}
  BUILD_NAME: ${{ github.repository }}
  GITHUB_WORKSPACE: ${{ github.workspace }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  IMAGE_NAME: ryantseng0224/spring4shell:codetocloud
  PASSWORD: "qazwsxEDCRFV"

    
jobs:
  aqua:
    name: Aqua Supply Chain Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Aqua Pipeline Enforcer
        uses: aquasecurity/pipeline-enforcer-action@v1.0.0
        env:
          CSPM_URL: https://api.cloudsploit.com
          AQUA_URL: https://api.8e41b427c6.cloud.aquasec.com
        with:
          aqua-key: ${{ secrets.AQUA_KEY }}
          aqua-secret: ${{ secrets.AQUA_SECRET }}        

      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --format sarif --output trivy-results.sarif --security-checks config,vuln,secret --debug --sast --reachability . 
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable reachability scanning, add: --reachability
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          AQUA_URL: https://8e41b427c6.cloud.aquasec.com
          CSPM_URL: https://api.cloudsploit.com/v2
          TRIVY_RUN_AS_PLUGIN: 'aqua'
  build:
    name: Build, Scan, and Push Docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME
    - name: Aqua Image Scanner
      run: |
        docker image ls 
        docker login registry.aquasec.com -u $AQUA_USER -p $AQUA_PASSWORD
        docker pull registry.aquasec.com/scanner:2301.4.6
        docker run --rm -v $GITHUB_WORKSPACE:/tmp -v /var/run/docker.sock:/var/run/docker.sock -e BUILD_NUMBER=$BUILD_NUMBER -e BUILD_JOB_NAME=$BUILD_NAME registry.aquasec.com/scanner:2022.4 scan -w /tmp --host $AQUA_HOST --token $AQUA_TOKEN --show-negligible --local $IMAGE_NAME --htmlfile /tmp/out.html --jsonfile /tmp/out.json > /dev/null
    - name: Push Docker image to Docker Hub
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push $IMAGE_NAME 
    - name: Aqua Release Artifact (SBOM)
      run: |
         export BILLY_SERVER=https://billy.codesec.aquasec.com
         curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
         curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
         if ! cat install.sh.checksum | sha256sum ; then
         echo "install.sh checksum failed"
         exit 1
         fi
         BINDIR="." sh install.sh
         rm install.sh install.sh.checksum
         ./billy generate \
           --access-token "${{ secrets.GH_TOKEN }}" \
           --aqua-key "${{ secrets.AQUA_KEY }}" \
           --aqua-secret "${{ secrets.AQUA_SECRET }}" \
           --cspm-url https://api.cloudsploit.com/v2 \
           --artifact-path $IMAGE_NAME 
           # The docker image name:tag of the newly built image
           # --artifact-path "my-image-name:${{ env.tag-version }}" 
           # OR the path to the root folder of your project. I.e my-repo/my-app 
           # --artifact-path "${{env.MY_APP_ROOT}}"

        
    - uses: actions/upload-artifact@v3
      with:
        name: aqua-artifact
        path: out.*
